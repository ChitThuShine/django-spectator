# -*- coding: utf-8 -*-
# Generated by Django 1.10.5 on 2017-03-02 15:19
from __future__ import unicode_literals

import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    dependencies = [
        ('spectator', '0010_auto_20170302_1343'),
    ]

    operations = [
        migrations.CreateModel(
            name='Movie',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('time_created', models.DateTimeField(auto_now_add=True, help_text='The time this item was created in the database.')),
                ('time_modified', models.DateTimeField(auto_now=True, help_text='The time this item was last saved to the database.')),
                ('title', models.CharField(max_length=255)),
                ('imdb_id', models.CharField(blank=True, help_text="Starts with 'tt', e.g. 'tt0100842'.", max_length=12, validators=[django.core.validators.RegexValidator(code='invalid_imdb_id', message='IMDb ID should be like "tt1234567"', regex='^tt\\d{7,10}$')], verbose_name='IMDb ID')),
                ('year', models.PositiveSmallIntegerField(blank=True, default=None, help_text='Year of release.', null=True)),
            ],
            options={
                'ordering': ('title',),
            },
        ),
        migrations.CreateModel(
            name='MovieEvent',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('time_created', models.DateTimeField(auto_now_add=True, help_text='The time this item was created in the database.')),
                ('time_modified', models.DateTimeField(auto_now=True, help_text='The time this item was last saved to the database.')),
                ('title', models.CharField(blank=True, help_text="e.g., 'Indietracks 2017', 'Radio 1 Roadshow'.", max_length=255)),
                ('date', models.DateField(null=True)),
                ('movie', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='spectator.Movie')),
                ('venue', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='spectator.Venue')),
            ],
            options={
                'ordering': ['date'],
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='MovieRole',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('time_created', models.DateTimeField(auto_now_add=True, help_text='The time this item was created in the database.')),
                ('time_modified', models.DateTimeField(auto_now=True, help_text='The time this item was last saved to the database.')),
                ('role_name', models.CharField(blank=True, help_text="e.g. 'Headliner', 'Support', 'Editor', 'Illustrator', 'Director', etc. Optional.", max_length=50)),
                ('role_order', models.PositiveSmallIntegerField(default=1, help_text='The order in which the Creators will be listed.')),
                ('creator', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='movie_roles', to='spectator.Creator')),
                ('movie', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='roles', to='spectator.Movie')),
            ],
            options={
                'ordering': ('role_order', 'role_name'),
                'abstract': False,
            },
        ),
        migrations.AddField(
            model_name='movie',
            name='creators',
            field=models.ManyToManyField(related_name='movies', through='spectator.MovieRole', to='spectator.Creator'),
        ),
    ]
